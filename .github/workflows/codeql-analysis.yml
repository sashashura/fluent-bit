# For most projects, this workflow file will not need changing; you simply need
# to commit it to your repository.
#
# You may wish to alter this file to override the set of languages analyzed,
# or to provide custom queries or build logic.
#
# ******** NOTE ********
# We have attempted to detect the languages in your repository. Please check
# the `language` matrix defined below to confirm you have the correct set of
# supported CodeQL languages.
#
name: "CodeQL"

on:
  workflow_dispatch:

jobs:
  analyze:
    name: Analyze
    runs-on: ubuntu-latest
    permissions:
      # actions: read
      # contents: read
      security-events: write

    strategy:
      fail-fast: false
      matrix:
        language: [ 'cpp']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    # Initializes the CodeQL tools for scanning.
    - name: Initialize CodeQL
      uses: github/codeql-action/init@v2
      with:
        config-file: ./.github/codeql-config.yml
        languages: ${{ matrix.language }}
        # If you wish to specify custom queries, you can do so here or in a config file.
        # By default, queries listed here will override any specified in a config file.
        # Prefix the list here with "+" to use these queries and those in the config file.
        
        # Details on CodeQL's query packs refer to : https://docs.github.com/en/code-security/code-scanning/automatically-scanning-your-code-for-vulnerabilities-and-errors/configuring-code-scanning#using-queries-in-ql-packs
        # queries: security-extended,security-and-quality

    # ‚ÑπÔ∏è Command-line programs to run using the OS shell.
    # üìö See https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#jobsjob_idstepsrun

    #   If the Autobuild fails above, remove it and uncomment the following three lines. 
    #   modify them (or add more) to build your code if your project, please refer to the EXAMPLE below for guidance.

    - name: Build Fluent Bit packages
      run: |
        sudo apt-get update && sudo apt-get install -y make cmake flex bison libssl-dev
        cd build

        # Plugins enabled/disabled

        INPUT_PLUGINS="-DFLB_IN_COLLECTD=OFF \
          -DFLB_IN_CPU=ON     \
          -DFLB_IN_DISK=ON    \
          -DFLB_IN_DOCKER=ON  \
          -DFLB_IN_EXEC=ON    \
          -DFLB_IN_FORWARD=ON \
          -DFLB_IN_HEAD=ON    \
          -DFLB_IN_HEALTH=ON  \
          -DFLB_IN_KMSG=ON    \
          -DFLB_IN_MEM=ON     \
          -DFLB_IN_MQTT=ON    \
          -DFLB_IN_NETIF=ON   \
          -DFLB_IN_PROC=ON    \
          -DFLB_IN_RANDOM=ON  \
          -DFLB_IN_SERIAL=ON  \
          -DFLB_IN_STDIN=ON   \
          -DFLB_IN_SYSLOG=ON  \
          -DFLB_IN_SYSTEMD=ON \
          -DFLB_IN_TAIL=ON    \
          -DFLB_IN_TCP=ON     \
          -DFLB_IN_THERMAL=ON \
          -DFLB_IN_WINLOG=ON"

        OUTPUT_PLUGINS="-DFLB_OUT_AZURE=OFF  \
          -DFLB_OUT_BIGQUERY=ON      \
          -DFLB_OUT_COUNTER=ON       \
          -DFLB_OUT_DATADOG=ON       \
          -DFLB_OUT_ES=ON            \
          -DFLB_OUT_FILE=ON          \
          -DFLB_OUT_FLOWCOUNTER=ON   \
          -DFLB_OUT_FORWARD=ON       \
          -DFLB_OUT_GELF=ON          \
          -DFLB_OUT_HTTP=ON           \
          -DFLB_OUT_INFLUXDB=ON      \
          -DFLB_OUT_KAFKA=ON         \
          -DFLB_OUT_KAFKA_REST=ON    \
          -DFLB_OUT_LOKI=ON          \
          -DFLB_OUT_NATS=ON          \
          -DFLB_OUT_NRLOGS=ON        \
          -DFLB_OUT_NULL=ON          \
          -DFLB_OUT_PGSQL=ON         \
          -DFLB_OUT_PLOT=ON          \
          -DFLB_OUT_SLACK=ON         \
          -DFLB_OUT_SPLUNK=ON        \
          -DFLB_OUT_STACKDRIVER=ON   \
          -DFLB_OUT_STDOUT=ON         \
          -DFLB_OUT_SYSLOG=ON        \
          -DFLB_OUT_TCP=ON"

        MISC_PLUGINS="-DFLB_LUAJIT=ON \
          -DFLB_STREAM_PROCESSOR=ON"

        FILTER_PLUGINS="-DFLB_FILTER_ALTER_SIZE=ON  \
          -DFLB_FILTER_AWS=ON              \
          -DFLB_FILTER_GREP=ON             \
          -DFLB_FILTER_KUBERNETES=ON       \
          -DFLB_FILTER_MODIFY=ON           \
          -DFLB_FILTER_NEST=ON             \
          -DFLB_FILTER_PARSER=ON           \
          -DFLB_FILTER_RECORD_MODIFIER=ON  \
          -DFLB_FILTER_REWRITE_TAG=ON      \
          -DFLB_FILTER_THROTTLE=ON"

        EXTRA_FLAGS="-DFLB_BINARY=OFF \
          -DFLB_EXAMPLES=OFF \
          -DFLB_METRICS=ON   \
          -DFLB_DEBUG=ON     \
          -DMBEDTLS_FATAL_WARNINGS=OFF \
          -DFLB_CONFIG_YAML=OFF"

        cmake -DFLB_TESTS_INTERNAL=ON \
              ${EXTRA_FLAGS} \
              ${INPUT_PLUGINS} \
              ${FILTER_PLUGINS} \
              ${MISC_PLUGINS} \
              ${OUTPUT_PLUGINS} \
              ..

        make

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2
      
    - name: export
      shell: bash
      run: echo '::set-output name=RUNNER_TEMP::'${RUNNER_TEMP//\\/\\\\}
      id: runner-temp

    - uses: actions/upload-artifact@v2
      with:
        name: ${{ matrix.language }}
        path: "${{steps.runner-temp.outputs.RUNNER_TEMP}}/codeql_databases/${{ matrix.language }}"
